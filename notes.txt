1--What is an EventEmitter in node JS?
The EventEmitter is a module that facilitates communication/interaction between objects in Node.
EventEmitter is at the core of Node asynchronous event-driven architecture.
Many of Node's built-in modules inherit from EventEmitter including prominent frameworks like Express.

2--What is client in node js?
The Node. js Client API enables you to create Node. js applications
that can read, write, and query documents and semantic data in a MarkLogic database.

3--What is a server in node js?
Node. js is an open source server environment. Node. js uses JavaScript on the server.
The task of a web server is to open a file on the server and return the content to the client.

--Client and servers 
Client sends the request to the server and server recieves the request and send the response back to the client.
Protocols-A set of communication rules that boths sides agress to communicate with each other.
What does server side language mean?
Specifically, in Web Application Development there are two types of codes.

--Client- Side
Server-Side

--Client-Side code is the code which executes on the Client PC (The WebSite/WebApp User/Visitor). 
That is the HTML, JavaScript, CSS. This is what Web browsers understand.

--Server-Side code is the code which executes on Server(Where website is hosted). That can be in PHP, C# (IN ASP_NET), PYTHON etc. 
This contains database queries, calculations etc. After executing that code on Server all of that will get 
rendered (Converted) to HTML which we generally see on our web browsers.



--What are the tradeoffs of client-side rendering vs. server-side rendering?
Since Google Plus and a few other cutting-edge websites now render entirely on the client,
let's review why server-side rendering is desirable at all.

##Streams and buffer
--Streams--We require streams in Node Js to handle and manipulate the streaming data like a video, a large file, etc.
The streams module in Node.js is used to manage all the streams. 
A stream is an abstract interface used to work along with the streaming data in Node.js.

--Buffer--
In Node Js, buffers are used to store raw binary data. A buffer represents a chunk of memory that is allocated on our computer. 
The size of the buffer, once set, cannot be changed. A buffer is used to store bytes. 

Three types of Streams
1--Readable streams → This stream is used to create a stream of data for reading, for example: to read a large chunk of files.
2--Writable streams → This stream is used to create a stream of data to write. For example: to write a large amount of data in a file
3--Duplex streams → This stream is used to create a stream that is both readable and writable at the same time.

####Pipes:
Pipes can be used to connect multiple streams together. One of the most common example is to pipe the read 
and write stream together for the transfer of data from one file to the other. 
Node. js is often also tagged as an event driven framework, and it's very easy to define events in Node.





--Server-side rendering means when the browser fetches the page over HTTP, 
it immediately gets back HTML describing the page. Server-side rendering is nice because:

##Express is a node js web application framework that provides broad features for building web and mobile applications.
It is used to build a single page, multipage, and hybrid web application. 
It's a layer built on the top of the Node js that helps manage servers and routes

Is node JS and express JS same?
Node. js is a platform for building the i/o applications which are server-side event-driven and made using JavaScript.
Express. js is a framework based on Node.









































































